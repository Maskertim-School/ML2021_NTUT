from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_breast_cancer
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
def get_mean_of_missing_values_attr(attribute):
    numbers = 0
    total = 0
    for value in attribute:
        if value != '?':
            total += int(value)
            numbers += 1
    return total / numbers

def get_data():
    breast_cancer = pd.read_csv('breast-cancer-wisconsin.data', header=None, usecols=range(1, 11))
    breast_cancer.replace(to_replace='?', value=get_mean_of_missing_values_attr(breast_cancer.iloc[:, 5]), inplace=True)
    breast_cancer = breast_cancer.astype('int64')
    features = breast_cancer.iloc[:, :9].values
    classes = breast_cancer.iloc[:, 9].values
    
    return features, classes

def get_variation(features, classes, C_range):
    train_acc = []
    test_acc = []

    for c in C_range:
        features_train, features_test, classes_train, classes_test = train_test_split(features, classes, test_size=0.3)
        clf = SVC(kernel='rbf', C=c)
        clf.fit(features_train, classes_train)
        train_acc.append(clf.score(features_train, classes_train))
        test_acc.append(clf.score(features_test, classes_test))
    
    return train_acc, test_acc
features, classes = get_data()
C_range = np.arange(0.1, 3, 0.1)
accuracy = []

for _ in range(50):
    accuracy.append(np.mean(get_variation(features, classes, C_range)[1]))
    
print(f'Average accuracy: {np.mean(accuracy)*100}%')
train_acc, test_acc = get_variation(features, classes, C_range)
plt.ylabel('Accuracy')
plt.xlabel('C')
plt.plot(C_range, train_acc, C_range, test_acc)
plt.show()
Average accuracy: 96.77898193760262%