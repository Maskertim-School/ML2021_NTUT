# Demo progrm to show how to use HMM

import numpy as np
import matplotlib.pyplot as plt
import math
from hmmlearn import hmm

zip = np.load('HMM_data.npz')
X1_train = zip['arr_0'] # trainin sequence for 1st HMM
X2_train = zip['arr_1'] # training sequence for 2nd HMM
test_1 = zip['arr_2'] # two test sequences
test_2 = zip['arr_3']

# Create two models to be trained ...
testHMM1 = hmm.MultinomialHMM(n_components=3,n_iter=100) # number of states is actually unknown, we assume we know it
testHMM2 = hmm.MultinomialHMM(n_components=3,n_iter=100) # number of states is actually unknown, we assume we know it

# Perform HMM training
testHMM1.fit(X1_train)
testHMM2.fit(X2_train)

# Perform HMM test and print the class of each test sequence
score1 = testHMM1.score(test_1)
score2 = testHMM2.score(test_1)

if (score1 > score2):
    print('sequence 1 is generated by class 1')
else:
    print('sequence 1 is generated by class 2')

score1 = testHMM1.score(test_2)
score2 = testHMM2.score(test_2)

if (score1 > score2):
    print('sequence 2 is generated by class 1')
else:
    print('sequence 2 is generated by class 2')